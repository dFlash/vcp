angular.module("app-admin-controllers",["ngRoute","ngFileUpload"]).config(function(a){a.when("/admin/companies",{templateUrl:"static/html/companies.html",controller:"companiesController"});a.when("/admin/accounts",{templateUrl:"static/html/accounts.html",controller:"accountsController"});a.when("/admin/statistics",{templateUrl:"static/html/statistics.html",controller:"statisticsController"})}).controller("companiesController",["$scope","adminService","$location","$route",function(a,b,c,d){null==c.search().page?
a.currentPage=0:a.currentPage=c.search().page;a.path=c.path()+"?";a.companiesPage=b.listCompanies(a.currentPage);a.reset=function(){a.isNewCompany=!0;a.currentCompany={};a.currentCompany.name="";a.currentCompany.address="";a.currentCompany.contactEmail="";a.currentCompany.phone=""};a.reset();a.editCompany=function(b){for(i=0;i<a.companiesPage.content.length;i++)if(a.companiesPage.content[i].id==b){a.currentCompany=a.companiesPage.content[i];a.isNewCompany=!1;break}};a.addCompany=function(){b.addCompany(a.currentCompany,
function(){alert("Company was added");d.reload()},function(){alert("Company was not added")})};a.saveCompany=function(){b.updateCompany(a.currentCompany.id,a.currentCompany,function(){alert("Company was updated");d.reload()},function(){alert("Company was not updated")})};a.deleteCompany=function(a){b.deleteCompany(a,function(){alert("Company was deleted");d.reload()},function(){alert("Company was not deleted")})}}]).controller("accountsController",["$scope","adminService","$location","$route","DefaultAvatar",
function(a,b,c,d,e){null==c.search().page?a.currentPage=0:a.currentPage=c.search().page;a.path=c.path()+"?";a.accountsPage=b.listAccounts(a.currentPage);a.reset=function(){a.isNewUser=!0;a.currentUser={};a.companies=b.listAllCompanies();a.currentUser.company={};a.roles=["User","Admin"];a.currentUser.role=a.roles[0];a.currentUser.name="";a.currentUser.surname="";a.currentUser.login="";a.currentUser.email="";a.currentUser.avatar=e;a.currentUser.password=""};a.reset();a.editUser=function(b){for(i=0;i<
a.accountsPage.content.length;i++)if(a.accountsPage.content[i].id==b){a.currentUser=a.accountsPage.content[i];a.isNewUser=!1;break}};a.uploadAvatar=function(){if(a.currentUser.email){var c={email:a.currentUser.email};b.uploadAvatar().upload({},c,function(b){a.currentUser.avatar=b.avatarUrl},function(a){alert("Upload avatar error")})}};a.addUser=function(){b.addUser().add({},a.currentUser,function(a){alert("User added successfully");d.reload()},function(){alert("User was not added")})};a.saveUser=
function(){b.updateUser(a.currentUser.id).update({},a.currentUser,function(a){alert("User saved successfully");d.reload()},function(){alert("User was not saved")})};a.deleteUser=function(a){b.deleteUser(a,function(){alert("Deleted successfully");d.reload()},function(){alert("User was not deleted")})}}]).controller("statisticsController",["$scope","adminService",function(a,b){a.statistics=b.statistics()}]);
angular.module("app-admin-services",["ngResource"]).service("adminService",["$resource",function(a){return{listCompanies:function(b){return a("/admin/companies?page\x3d"+b).get()},addCompany:function(b,c,d){a("/admin/companies").save({},b,c,d)},deleteCompany:function(b,c,d){return a("/admin/companies/"+b).remove(c,d)},updateCompany:function(b,c,d,e){a("/admin/companies/"+b,null,{update:{method:"PUT"}}).update({},c,d,e)},listAccounts:function(b){return a("/admin/accounts?page\x3d"+b).get()},listAllCompanies:function(){return a("/admin/companies/all").get()},
uploadAvatar:function(){return a("/admin/avatar",{},{upload:{method:"POST"}})},addUser:function(){return a("/admin/accounts/",{},{add:{method:"POST",headers:{"Content-Type":"application/json"}}})},updateUser:function(b){return a("/admin/accounts/"+b,{},{update:{method:"PUT",headers:{"Content-Type":"application/json"}}})},deleteUser:function(b,c,d){return a("/admin/accounts/"+b).remove(c,d)},statistics:function(b){return a("/admin/statistics?page\x3d"+b).get()}}}]);
angular.module("app-constants",[]).constant("Roles",{admin:"Admin",user:"User"}).constant("DefaultAvatar","https://wiki.geant.org/s/en_GB/5639/a252d7f5e75d7a8bf7047b4b2c92f71a56a8f048.22/_/images/icons/profilepics/anonymous.png");
angular.module("app-controllers",["ngRoute","ngFileUpload"]).config(function(a){a.when("/videos",{templateUrl:"static/html/videos.html",controller:"videoListController"});a.when("/video/:videoId",{templateUrl:"static/html/video.html",controller:"videoController"});a.when("/videos/search",{templateUrl:"static/html/videos.html",controller:"searchResultController"});a.when("/login",{templateUrl:"static/html/login.html",controller:"loginController"});a.when("/logout",{templateUrl:"static/html/login.html",
controller:"logoutController"});a.when("/403",{templateUrl:"static/html/403.html"});a.when("/serverError",{templateUrl:"static/html/500.html"});a.otherwise({redirectTo:"/videos"})}).controller("videoListController",["$scope","videoService","$location",function(a,b,c){null==c.search().page?a.currentPage=0:a.currentPage=c.search().page;a.path=c.path()+"?";a.videosPage=b.listAll(a.currentPage)}]).controller("videoController",["$scope","videoService","$routeParams","$route",function(a,b,c,d){a.video=
b.getVideo(c.videoId)}]).controller("searchController",["$scope","$location",function(a,b){a.query="";a.find=function(){""!=a.query.trim()?(b.path("/videos/search").search({query:a.query,page:0}),a.query=""):b.path("/videos")};a.onEnter=function(b){13===b.which&&a.find()}}]).controller("searchResultController",["$scope","$location","videoService",function(a,b,c){a.currentPage=b.search().page;var d=b.search().query;a.videosPage=c.listBySearchQuery(a.currentPage,d);a.path=b.path()+"?query\x3d"+d+"\x26"}]).controller("loginController",
["$scope","loginService","$location","$rootScope","Roles",function(a,b,c,d,e){a.login=function(){b.login({params:{name:a.name,password:a.password,rememberMe:a.rememberMe}},function(){d.principal.role==e.user?c.path("/user-videos"):d.principal.role==e.admin?c.path("/admin/accounts"):c.path("/videos")})};a.sendHash=function(){b.sendMail({username:a.name},function(){alert("Check your email")},function(){alert("Server error")})}}]).controller("logoutController",["$scope","loginService","$location",function(a,
b,c){b.logout(function(){c.path("/videos")})}]).controller("menuController",["$scope","Roles",function(a,b){a.admin=b.admin;a.user=b.user}]).controller("changePasswordController",["$scope","changePasswordService","$location","$route",function(a,b,c,d){a.changePwd=function(){var e=function(a,b){a=a.replace(/[\[\]]/g,"\\$\x26");var c=(new RegExp("[?\x26]"+a+"(\x3d([^\x26#]*)|\x26|#|$)")).exec(b);return c?c[2]?decodeURIComponent(c[2].replace(/\+/g," ")):"":null}("id",c.absUrl());b.sendNewPassword({newPassword:a.newPassword,
repeatPassword:a.repeatPassword,userId:e},function(){alert("Password changed successfully");c.path("/login")},function(){alert("Password was not changed");d.reload()})}}]);angular.module("app-filters",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;c<b;c++)a.push(c);return a}});
angular.module("app-interceptors",[]).factory("authHttpResponseInterceptor",["$q","$location","$rootScope",function(a,b,c){return{responseError:function(c){401===c.status&&b.path("/login");400===c.status&&(alert("Wrong login or password"),b.path("/login"));403===c.status&&b.path("/403");500===c.status&&(c.data.hasOwnProperty("addError")&&1==c.data.addError?alert(c.data.message):b.path("/serverError"));return a.reject(c)},response:function(a){var b=a.headers("production");c.production=b;var b=a.headers("PrincipalName"),
f=a.headers("PrincipalRole");c.principal=void 0!=b&&void 0!=f?{auth:!0,name:b,role:f}:{auth:!1,name:"",role:"anonym"};return a}}}]).config(["$httpProvider",function(a){a.interceptors.push("authHttpResponseInterceptor")}]);
angular.module("app-services",["ngResource"]).service("videoService",["$resource",function(a){return{listAll:function(b){return a("/video/all?page\x3d"+b).get()},getVideo:function(b){return a("/video/"+b).get()},listBySearchQuery:function(b,c){return a("/videos/search?query\x3d:queryParam\x26page\x3d:pageParam",{queryParam:c,pageParam:b}).get()}}}]).service("loginService",["$http","$resource",function(a,b){return{login:function(b,d){a.post("/login",null,b).success(d)},logout:function(b){a.post("/logout").success(b)},
sendMail:function(a,d,e){b("/send-mail").save({},a,d,e)}}}]).service("changePasswordService",["$resource",function(a){return{sendNewPassword:function(b,c,d){a("/change-password").save({},b,c,d)}}}]);
angular.module("app-user-controllers",["ngRoute","ngFileUpload"]).config(function(a){a.when("/upload",{templateUrl:"static/html/upload.html",controller:"videoUploadController"});a.when("/user-videos",{templateUrl:"static/html/user-videos.html",controller:"userVideoListController"});a.when("/edit-video/:videoId",{templateUrl:"static/html/edit-video.html",controller:"editVideoController"});a.when("/delete-video/:videoId",{templateUrl:"static/html/user-videos.html",controller:"deleteVideoController"})}).controller("videoUploadController",
["$scope","userService","$location",function(a,b,c){a.uploadVideo=function(){var d=new FormData;d.append("title",a.title);d.append("description",a.description);d.append("file",a.videoFile);b.uploadVideo().upload({},d,function(a){alert("Upload completed successfully");c.path("/video/"+a.id)},function(){alert("Upload error")})}}]).controller("userVideoListController",["$scope","userService","$location",function(a,b,c){null==c.search().page?a.currentPage=0:a.currentPage=c.search().page;a.videosPage=
b.userListAll(a.currentPage);a.path=c.path()+"?"}]).controller("editVideoController",["$scope","videoService","$routeParams","$location","userService",function(a,b,c,d,e){a.video=b.getVideo(c.videoId);a.uploadThumbnail=function(){var b=new FormData;b.append("file",a.thumbnail);e.uploadThumbnail().upload({},b,function(b){alert("Upload completed successfully");a.video.thumbnail=b.thumbnailUrl},function(){alert("Upload error")})};a.updateVideo=function(){e.updateVideo(a.video.id).update({},a.video,function(a){alert("Upload completed successfully");
d.path("/user-videos")},function(){alert("Upload error")})}}]).controller("deleteVideoController",["userService","$routeParams","$location",function(a,b,c){a.deleteVideo(b.videoId,function(){alert("Deleted successfully");c.path("/user-videos")},function(){alert("Video was not deleted")})}]);
angular.module("app-user-services",["ngResource"]).service("userService",["$resource",function(a){return{uploadVideo:function(){return a("/my-account/videos",{},{upload:{method:"POST",transformRequest:angular.identity,headers:{"Content-Type":void 0}}})},updateVideo:function(b){return a("/my-account/videos/"+b,{},{update:{method:"PUT",headers:{"Content-Type":"application/json"}}})},uploadThumbnail:function(){return a("/my-account/thumbnail",{},{upload:{method:"POST",transformRequest:angular.identity,
headers:{"Content-Type":void 0}}})},deleteVideo:function(b,c,d){return a("/my-account/videos/"+b).remove(c,d)},userListAll:function(b){return a("/my-account/videos?page\x3d"+b).get()}}}]);angular.module("app","app-constants app-interceptors app-services app-admin-services app-user-services app-controllers app-admin-controllers app-user-controllers app-filters".split(" "));